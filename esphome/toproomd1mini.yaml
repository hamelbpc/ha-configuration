substitutions:
  hatoken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI0MzA4YTc1OWI3YjI0OTFkYmZkNTBhZTE3NzM1ZDdmMSIsImlhdCI6MTY3Njc4MDEzNywiZXhwIjoxOTkyMTQwMTM3fQ.9u0X_pXfeIUdznuaDVd82TNp_4L4REagWIMc-9vskdU"

esphome:
  name: toproomd1mini
  platform: ESP8266
  board: d1_mini
  on_boot:
    priority: 600.0
    then:
      - delay: 1s
      - script.execute:
          id: change_light
          light: gpio_red
          new_state: true
          turn_other_lights_off: true
      - delay: 30s
      - if:
          condition:
            wifi.connected
          then:
            - script.execute:
                id: change_light
                light: gpio_yellow
                new_state: true
                turn_other_lights_off: true            
      - delay: 5s
      - script.execute:
          id: statuslights

http_request:
  useragent: esphome/device
  timeout: 10s

wifi:
  ssid: "MelbPC-NUE"
  password: "peachspeak38"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "toproomd1mini"

logger:
   
web_server:

api:

ota:

output:
  - platform: gpio
    pin: D5
    id: gpio_red
  - platform: gpio
    pin: D6
    id: gpio_yellow
  - platform: gpio
    pin: D7
    id: gpio_green

script:
  - id: change_light
    parameters:
      new_state: bool
      turn_other_lights_off: bool
      light: string
    then:
      - if:
          condition:
            lambda: |-
              return turn_other_lights_off;
          then:
            - output.turn_off: gpio_red
            - output.turn_off: gpio_yellow
            - output.turn_off: gpio_green
      - if:
          condition:
            lambda: |-
              return new_state;
          then:
            - if:
                condition:
                  lambda:
                    return light == "gpio_red";
                then:
                  - output.turn_on: gpio_red
            - if:
                condition:
                  lambda:                  
                    return light == "gpio_yellow";
                then:
                  - output.turn_on: gpio_yellow
            - if:
                condition:
                  lambda:                  
                    return light == "gpio_green";
                then:
                  - output.turn_on: gpio_green
        

  - id: statuslights 
    then:
      - http_request.get:
          url: http://192.168.81.162:8123/api/
          headers:
            Content-Type: application/json
            Authorization: "Bearer ${hatoken}"
          on_response:
            then:
              - if:
                  condition:
                    lambda: |-
                      return status_code == 200;
                  then:
                    - if:
                        condition:
                          wifi.connected
                        then:
                          - script.execute:
                              id: change_light
                              light: gpio_green
                              new_state: true
                              turn_other_lights_off: true                                
                  else:
                    - if:
                        condition:
                          wifi.connected
                        then:
                          - script.execute:
                              id: change_light                              
                              light: gpio_yellow
                              new_state: true
                              turn_other_lights_off: true                                

                        else:
                          - script.execute:
                              id: change_light                              
                              light: gpio_red
                              new_state: true
                              turn_other_lights_off: true                  



